<?php

return [
    /*
     |--------------------------------------------------------------------------
     | Настройки отладки
     |--------------------------------------------------------------------------
     | Debugbar включен по умолчанию, когда для debug установлено значение true в app.php.
     | Вы можете переопределить значение, установив enable в true или false вместо null.
     | Вы можете предоставить массив URI, который должен быть проигнорирован (например, api / *)
	*/
    'enabled' => env('DEBUGBAR_ENABLED', null),
    'except' => [
        //
    ],
	
    /*
     |--------------------------------------------------------------------------
     | Настройки хранилища
     |--------------------------------------------------------------------------
     | DebugBar хранит данные для запросов session / ajax.
     | Вы можете отключить это, поэтому debugbar хранит данные в заголовках / сеансах, но это может вызвать проблемы с большими сборщиками данных.
     | По умолчанию используется хранилище файлов (в папке хранилища). Также можно использовать Redis и PDO. Для PDO сначала выполните миграцию пакетов.
	*/
    'storage' => [
        'enabled'    => true,
        'driver'     => 'pdo',						// redis, file, pdo, custom
        'path'       => storage_path('debugbar'),	// Для файлового драйвера
        'connection' => null,						// Оставьте значение null для подключения по умолчанию (Redis / PDO)
        'provider'   => ''							// Экземпляр StorageInterface для настраиваемого драйвера
    ],
	
    /*
     |--------------------------------------------------------------------------
     | Vendors
     |--------------------------------------------------------------------------
     | Файлы поставщика включены по умолчанию, но могут быть установлены в false.
     | Это также можно установить в «js» или «css», чтобы включать только файлы javascript или css.
     | Файлы-разработчики предназначены для css: font-awesome (включая шрифты) и highlight.js (css-файлы) и для js: jquery и и highlight.js
     | Поэтому, если вы хотите выделить синтаксис, установите для него значение true.
     | jQuery настроен не на конфликт с существующими сценариями jQuery.
	*/
    'include_vendors' => true,
	
    /*
     |--------------------------------------------------------------------------
     | Захват Ajax-запросов
     |--------------------------------------------------------------------------
     | Debugbar может захватывать запросы Ajax и отображать их. Если вы не хотите этого (т. Е. Из-за ошибок), 
     | вы можете использовать этот параметр, чтобы отключить отправку данных через заголовки.
     | При желании вы также можете отправлять заголовки ServerTiming на запросы ajax для Chrome DevTools.
	*/
    'capture_ajax' => false,
    'add_ajax_timing' => false,
	
    /*
     |--------------------------------------------------------------------------
     | Пользовательский обработчик ошибок для устаревших предупреждений
     |--------------------------------------------------------------------------
	 | Когда включено, Debugbar показывает устаревшие предупреждения для компонентов Symfony на вкладке «Сообщения».
	*/
    'error_handler' => false,
	
    /*
     |--------------------------------------------------------------------------
     | Интеграция часовых механизмов
     |--------------------------------------------------------------------------
     | Debugbar может эмулировать заголовки Clockwork, поэтому вы можете использовать расширение Chrome, без серверного кода. 
     | Вместо этого он использует коллекторы Debugbar.
	*/
    'clockwork' => false,
	
    /*
     |--------------------------------------------------------------------------
     | DataCollectors
     |--------------------------------------------------------------------------
     | Включение / выключение сборщиков данных
	*/
    'collectors' => [
        'phpinfo'         => false,	// Версия PHP
        'messages'        => true,	// Сообщения
        'time'            => true,  // Регистратор времени
        'memory'          => true,  // Использование памяти
        'exceptions'      => true,  // Диспетчер исключений
        'log'             => true,  // Журналы из Monolog (объединены в сообщениях, если они включены)
        'db'              => true,  // Показать запросы базы данных (PDO) и привязки
        'views'           => true,  // Шаблоны с их данными
        'route'           => true,  // Текущая информация о маршруте
        'auth'            => true,	// Отобразить статус аутентификации Laravel
        'gate'            => true, 	// Отображать проверки Laravel Gate
        'session'         => true,  // Отображение данных сеанса
        'symfony_request' => true,  // Включить только один can.
        'mail'            => false,	// Посылать почтовые сообщения
        'laravel'         => false, // Версия Laravel и окружающая среда
        'events'          => true,	// Все события
        'default_request' => false, // Регулярный или специальный регистратор запросов Symfony
        'logs'            => true,	// Добавить последние сообщения журнала
        'files'           => false,	// Показать включенные файлы
        'config'          => false,	// Показать настройки конфигурации 
        'cache'           => false,	// События отображения кеша
    ],
	
    /*
     |--------------------------------------------------------------------------
     | Дополнительные опции
     |--------------------------------------------------------------------------
     | Настройка некоторых сборщиков данных
	*/
    'options' => [
        'auth' => [
            'show_name' => true,			// Показать имя пользователя и адрес электронной почты в debugbar
        ],
        'db' => [
            'with_params'       => true,	// Render SQL с замененными параметрами
            'backtrace'         => true,	// Использовать обратную линию, чтобы найти происхождение запроса в файлах.
            'timeline'          => false,	// Добавление запросов к временной шкале
            'explain' => [					// Показать EXPLAIN-вывод по запросам
                'enabled' => false,
                'types' => ['SELECT'],		// ['SELECT', 'INSERT', 'UPDATE', 'DELETE']; для MySQL 5.6.3+
            ],
            'hints'             => true,	// Показать подсказки для распространенных ошибок
        ],
        'mail' => [
            'full_log' => false
        ],
        'views' => [
            'data' => false,				// Примечание. Может замедлить работу приложения, поскольку данные могут быть довольно большими ..
        ],
        'route' => [
            'label' => true					// показать полный маршрут на баре
        ],
        'logs' => [
            'file' => null
        ],
        'cache' => [
            'values' => true				// собирать значения кеша
        ],
    ],
	
    /*
     |--------------------------------------------------------------------------
     | Ввод отладки в ответе
     |--------------------------------------------------------------------------
     | Обычно debugbar добавляется непосредственно перед </ body>, прослушивая ответ после того, как приложение выполнено.
     | Если вы отключите это, вы должны добавить их в свой шаблон самостоятельно. http://phpdebugbar.com/docs/rendering.html
	*/
    'inject' => true,
	
    /*
     |--------------------------------------------------------------------------
     | Префикс маршрута DebugBar
     |--------------------------------------------------------------------------
     | Иногда вы хотите установить префикс маршрута, который будет использоваться DebugBar для загрузки своих ресурсов. 
	 | Обычно потребность исходит от неверно настроенного веб-сервера или от попыток преодоления ошибок, подобных этому: http://trac.nginx.org/nginx/ticket/97
	*/
    'route_prefix' => '_debugbar',
	
    /*
     |--------------------------------------------------------------------------
     | Домен маршрута DebugBar
     |--------------------------------------------------------------------------
     | По умолчанию маршрут DebugBar обслуживается из того же домена, который запрашивается.
     | Чтобы переопределить домен по умолчанию, укажите его как непустое значение.
	*/
    'route_domain' => null,
	
];
